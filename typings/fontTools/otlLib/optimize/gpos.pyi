"""
This type stub file was generated by pyright.
"""

from typing import Dict, List, Sequence, Tuple
from fontTools.ttLib import TTFont
from fontTools.ttLib.tables import otBase, otTables

log = ...
COMPRESSION_LEVEL = ...
GPOS_COMPACT_MODE_ENV_KEY = ...
GPOS_COMPACT_MODE_DEFAULT = ...
def compact(font: TTFont, level: int) -> TTFont:
    ...

def compact_lookup(font: TTFont, level: int, lookup: otTables.Lookup) -> None:
    ...

def compact_ext_lookup(font: TTFont, level: int, lookup: otTables.Lookup) -> None:
    ...

def compact_pair_pos(font: TTFont, level: int, subtables: Sequence[otTables.PairPos]) -> Sequence[otTables.PairPos]:
    ...

def compact_class_pairs(font: TTFont, level: int, subtable: otTables.PairPos) -> List[otTables.PairPos]:
    ...

def is_really_zero(class2: otTables.Class2Record) -> bool:
    ...

Pairs = Dict[Tuple[Tuple[str, ...], Tuple[str, ...]], Tuple[otBase.ValueRecord, otBase.ValueRecord],]
ClusteringContext = ...
class Cluster:
    __slots__ = ...
    def __init__(self, ctx: ClusteringContext, indices_bitmask: int) -> None:
        ...
    
    @property
    def indices(self): # -> list[int]:
        ...
    
    @property
    def column_indices(self): # -> list[int]:
        ...
    
    @property
    def width(self): # -> int:
        ...
    
    @property
    def cost(self):
        ...
    
    @property
    def coverage_bytes(self): # -> int:
        ...
    
    @property
    def classDef1_bytes(self): # -> int:
        ...
    
    @property
    def classDef2_bytes(self): # -> int:
        ...
    


def cluster_pairs_by_class2_coverage_custom_cost(font: TTFont, pairs: Pairs, compression: int = ...) -> List[Pairs]:
    ...

